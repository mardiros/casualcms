version: "3"

networks:
  proxy:
    # external: true
  internal:
    external: false

volumes:
  postgresql:

services:

  casualcms:
    build: .
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.casualcms.entrypoints=web"
      - "traefik.http.routers.casualcms.rule=Host(`www.${DOMAIN_NAME}`)"
      - "traefik.http.services.casualcms.loadbalancer.server.port=8000"
    networks:
      - "internal"
    command:
      - poetry
      - run
      - python
      - src/casualcms/entrypoint.py
    environment:
      - "CASUALCMS_ASSETS_PATH=/app/casualcms_com/assets"
      - "CASUALCMS_TEMPLATE_SEARCH_PATH=/app/casualcms_com/models"
      - "PYTHONPATH=/app"
      - 'CASUALCMS_IMPORT_MODELS=["casualcms_com.models"]'
      - "CASUALCMS_ADMIN_USERNAME=alice"
      - "CASUALCMS_ADMIN_PASSWORD=secret"
      - "CASUALCMS_USE_RELOADER=true"
      - "CASUALCMS_CREATE_DATABASE_SCHEMA=true"
      # - "CASUALCMS_UNIT_OF_WORK=casualcms.adapters.uow_sqla:SQLUnitOfWork"
      # - "CASUALCMS_DATABASE_URL=postgresql+asyncpg://postgres@postgresql/casualcms"
      # - "CASUALCMS_DATABASE_MIGRATIONS_PATH=/srv/casualcms/sql-migrations"
    volumes:
      - "./casualcms.com:/app/casualcms_com"
      # development module
      - "./src:/srv/casualcms/src"
      - "./alembic.ini:/srv/casualcms/alembic.ini"
      - "./sql-migrations:/srv/casualcms/sql-migrations"
      - "/home/guillaume/.cache/pypoetry/virtualenvs/casualcms-tjAUXo7J-py3.10/lib/python3.10/site-packages/fastapi:/home/casualcms/.cache/pypoetry/virtualenvs/casualcms-i5MnOS1q-py3.10/lib/python3.10/site-packages/fastapi"

  postgresql:
    image: "postgres:12-alpine"
    networks:
      - "internal"
      - "proxy"
    ports:
      - 127.0.0.1:5432:5432
    environment:
      - SERVICE_NAME=postgresql
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - "postgresql:/var/lib/postgresql/data"
    labels:
      - "traefik.enable=false"

  traefik:
    image: "traefik:latest"
    command:
      - "--log.level=INFO"
      - "--api=true"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=internal"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - "proxy"
      - "internal"
    ports:
      - "80:80"
